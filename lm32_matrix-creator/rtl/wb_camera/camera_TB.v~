`timescale 1ns / 1ps

`define SIMULATION


module camera_TB;

//----------------------------------------------------------------------------
// Parameter (may differ for physical synthesis)
//----------------------------------------------------------------------------
parameter tck              = 200;       // clock period in ns
parameter clk_freq = 1000000000 / tck; // Frequenzy in HZ
//----------------------------------------------------------------------------
//

reg clk50MHz;
reg reset;
reg vsync;
reg [7:0]data;
reg href;

//ram
wire [3:0] dataOut;

camera try (.clk50MHz(clk50MHz), .vsync(vsync), .data(data), .href(href), .dataOut(dataOut), .ready(ready));

initial begin  // Initialize Inputs
      clk50MHz = 0; reset = 1; vsync = 0; data = 0; href= 0; 
//dataHI= 0; dataLO; we= 0; address=0; ClkRd= 0; ClkWr=0; add=0; dataIn=0; dataOut=0 ; 
   end

/* Clocking device */
	initial         clk50MHz <= 0;
	always #(tck/2) clk50MHz <= ~clk50MHz;

	initial begin



		$dumpfile("camera_TB.vcd");
		$dumpvars(-1, try);
		#0  reset=0;
		#100 vsync=1;
		#100 vsync=0;
		#100 href=1;
		#1300 data = 8'b00110011;
		#400 data = 8'b11110011;
		#400 data = 8'b11000011;
		#400 data = 8'b11010011;
		#400 data = 8'b10110011;
		#400 data = 8'b01110011;
		#400 data = 8'b11110011;
		#400 data = 8'b11000011;
		#400 data = 8'b10010011;
		#400 data = 8'b00110011;
		#80000 href=0;

		#(tck*2000000) $finish; //tiempo simulaciÃ³n
	end

endmodule	
